@{
    Layout = "_Layout";
}

@using SweetTreat.ViewModels

@model LoginViewModel

<div class="login-container">
    <h2 class="login-title">Log into your account</h2>
    <hr />

    @if (User.Identity.IsAuthenticated)
    {
        <p class="login-message">You are already logged in.</p>
        @using (Html.BeginForm("LogOff", "Accounts"))
        {
            <button type="submit" class="btn btn-primary">Log out</button>
        }
    }
    else
    {
      @if (!ViewData.ModelState.IsValid)
      {
          @Html.ValidationSummary("Please fix the following error(s) and then resubmit the form:", new { @class = "login-error" })
      }

      @using (Html.BeginForm())
      {
        <div class="form-group">
            @Html.LabelFor(m => m.Email, new { @class = "login-label" })
            @Html.TextBoxFor(m => m.Email, new { @class = "login-input" })
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Password, new { @class = "login-label" })
            @Html.PasswordFor(m => m.Password, new { @class = "login-input" })
        </div>

        <input type="submit" value="Log in" class="btn btn-primary" />

        <p class="login-link">
            @Html.ActionLink("Register for a user account", "Register")
        </p>
        <p class="login-link">
            @Html.ActionLink("Back to accounts page", "Index")
        </p>
      }
    }
</div>
